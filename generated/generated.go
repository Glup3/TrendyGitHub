// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// GetPublicReposRateLimit includes the requested fields of the GraphQL type RateLimit.
// The GraphQL type's documentation follows.
//
// Represents the client's rate limit.
type GetPublicReposRateLimit struct {
	// The maximum number of points the client is permitted to consume in a 60 minute window.
	Limit int `json:"limit"`
	// The number of points remaining in the current rate limit window.
	Remaining int `json:"remaining"`
	// The number of points used in the current rate limit window.
	Used int `json:"used"`
	// The time at which the current rate limit window resets in UTC epoch seconds.
	ResetAt time.Time `json:"resetAt"`
	// The point cost for the current query counting against the rate limit.
	Cost int `json:"cost"`
	// The maximum number of nodes this query may return
	NodeCount int `json:"nodeCount"`
}

// GetLimit returns GetPublicReposRateLimit.Limit, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetLimit() int { return v.Limit }

// GetRemaining returns GetPublicReposRateLimit.Remaining, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetRemaining() int { return v.Remaining }

// GetUsed returns GetPublicReposRateLimit.Used, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetUsed() int { return v.Used }

// GetResetAt returns GetPublicReposRateLimit.ResetAt, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetResetAt() time.Time { return v.ResetAt }

// GetCost returns GetPublicReposRateLimit.Cost, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetCost() int { return v.Cost }

// GetNodeCount returns GetPublicReposRateLimit.NodeCount, and is useful for accessing the field via an interface.
func (v *GetPublicReposRateLimit) GetNodeCount() int { return v.NodeCount }

// GetPublicReposResponse is returned by GetPublicRepos on success.
type GetPublicReposResponse struct {
	// The client's rate limit information.
	RateLimit GetPublicReposRateLimit `json:"rateLimit"`
	// Perform a search across resources, returning a maximum of 1,000 results.
	Search GetPublicReposSearchSearchResultItemConnection `json:"search"`
}

// GetRateLimit returns GetPublicReposResponse.RateLimit, and is useful for accessing the field via an interface.
func (v *GetPublicReposResponse) GetRateLimit() GetPublicReposRateLimit { return v.RateLimit }

// GetSearch returns GetPublicReposResponse.Search, and is useful for accessing the field via an interface.
func (v *GetPublicReposResponse) GetSearch() GetPublicReposSearchSearchResultItemConnection {
	return v.Search
}

// GetPublicReposSearchSearchResultItemConnection includes the requested fields of the GraphQL type SearchResultItemConnection.
// The GraphQL type's documentation follows.
//
// A list of results that matched against a search query. Regardless of the number
// of matches, a maximum of 1,000 results will be available across all types,
// potentially split across many pages.
type GetPublicReposSearchSearchResultItemConnection struct {
	// A list of edges.
	Edges []GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge `json:"edges"`
}

// GetEdges returns GetPublicReposSearchSearchResultItemConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnection) GetEdges() []GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge {
	return v.Edges
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge includes the requested fields of the GraphQL type SearchResultItemEdge.
// The GraphQL type's documentation follows.
//
// An edge in a connection.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge struct {
	// The item at the end of the edge.
	Node GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem `json:"-"`
}

// GetNode returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) GetNode() GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem {
	return v.Node
}

func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) __premarshalJSON() (*__premarshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge, error) {
	var retval __premarshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node: %w", err)
		}
	}
	return &retval, nil
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp includes the requested fields of the GraphQL type App.
// The GraphQL type's documentation follows.
//
// A GitHub App.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion includes the requested fields of the GraphQL type Discussion.
// The GraphQL type's documentation follows.
//
// A discussion in a repository.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing includes the requested fields of the GraphQL type MarketplaceListing.
// The GraphQL type's documentation follows.
//
// A listing in the GitHub integration marketplace.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest) GetTypename() string {
	return v.Typename
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository struct {
	Typename string `json:"__typename"`
	// The Node ID of the Repository object
	Id string `json:"id"`
	// Returns a count of how many stargazers there are on this object
	StargazerCount int `json:"stargazerCount"`
	// The description of the repository.
	Description string `json:"description"`
	// Returns how many forks there are of this repository in the whole network.
	ForkCount int `json:"forkCount"`
	// The repository's URL.
	HomepageUrl string `json:"homepageUrl"`
	// The name of the repository.
	Name string `json:"name"`
	// The repository's name with owner.
	NameWithOwner string `json:"nameWithOwner"`
	// The HTTP URL for this repository
	Url string `json:"url"`
	// Identifies the date and time when the object was last updated.
	UpdatedAt time.Time `json:"updatedAt"`
	// The primary language of the repository's code.
	PrimaryLanguage GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage `json:"primaryLanguage"`
	// A list containing a breakdown of the language composition of the repository.
	Languages GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection `json:"languages"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetTypename() string {
	return v.Typename
}

// GetId returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Id, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetId() string {
	return v.Id
}

// GetStargazerCount returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.StargazerCount, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetStargazerCount() int {
	return v.StargazerCount
}

// GetDescription returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Description, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetDescription() string {
	return v.Description
}

// GetForkCount returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.ForkCount, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetForkCount() int {
	return v.ForkCount
}

// GetHomepageUrl returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.HomepageUrl, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetHomepageUrl() string {
	return v.HomepageUrl
}

// GetName returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Name, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetName() string {
	return v.Name
}

// GetNameWithOwner returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.NameWithOwner, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetNameWithOwner() string {
	return v.NameWithOwner
}

// GetUrl returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Url, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetUrl() string {
	return v.Url
}

// GetUpdatedAt returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// GetPrimaryLanguage returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.PrimaryLanguage, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetPrimaryLanguage() GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage {
	return v.PrimaryLanguage
}

// GetLanguages returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Languages, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetLanguages() GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection {
	return v.Languages
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection includes the requested fields of the GraphQL type LanguageConnection.
// The GraphQL type's documentation follows.
//
// A list of languages associated with the parent.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection struct {
	// A list of edges.
	Edges []GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge `json:"edges"`
}

// GetEdges returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnection) GetEdges() []GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge {
	return v.Edges
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge includes the requested fields of the GraphQL type LanguageEdge.
// The GraphQL type's documentation follows.
//
// Represents the language of a repository.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge struct {
	Node GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage `json:"node"`
}

// GetNode returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge.Node, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdge) GetNode() GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage {
	return v.Node
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage includes the requested fields of the GraphQL type Language.
// The GraphQL type's documentation follows.
//
// Represents a given language found in repositories.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage struct {
	// The name of the current language.
	Name string `json:"name"`
}

// GetName returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage.Name, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryLanguagesLanguageConnectionEdgesLanguageEdgeNodeLanguage) GetName() string {
	return v.Name
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage includes the requested fields of the GraphQL type Language.
// The GraphQL type's documentation follows.
//
// Represents a given language found in repositories.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage struct {
	// The name of the current language.
	Name string `json:"name"`
}

// GetName returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage.Name, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage) GetName() string {
	return v.Name
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem includes the requested fields of the GraphQL interface SearchResultItem.
//
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem is implemented by the following types:
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository
// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser
// The GraphQL type's documentation follows.
//
// The results of a search.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem interface {
	implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser) implementsGraphQLInterfaceGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func __unmarshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(b []byte, v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "App":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp)
		return json.Unmarshal(b, *v)
	case "Discussion":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue)
		return json.Unmarshal(b, *v)
	case "MarketplaceListing":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SearchResultItem.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem: "%v"`, tn.TypeName)
	}
}

func __marshalGetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp:
		typename = "App"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion:
		typename = "Discussion"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing:
		typename = "MarketplaceListing"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository
		}{typename, v}
		return json.Marshal(result)
	case *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem: "%T"`, v)
	}
}

// GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *GetPublicReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser) GetTypename() string {
	return v.Typename
}

// __GetPublicReposInput is used internally by genqlient
type __GetPublicReposInput struct {
	Query  string `json:"query"`
	Limit  int    `json:"limit"`
	Cursor string `json:"cursor"`
}

// GetQuery returns __GetPublicReposInput.Query, and is useful for accessing the field via an interface.
func (v *__GetPublicReposInput) GetQuery() string { return v.Query }

// GetLimit returns __GetPublicReposInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetPublicReposInput) GetLimit() int { return v.Limit }

// GetCursor returns __GetPublicReposInput.Cursor, and is useful for accessing the field via an interface.
func (v *__GetPublicReposInput) GetCursor() string { return v.Cursor }

// The query or mutation executed by GetPublicRepos.
const GetPublicRepos_Operation = `
query GetPublicRepos ($query: String!, $limit: Int!, $cursor: String!) {
	rateLimit {
		limit
		remaining
		used
		resetAt
		cost
		nodeCount
	}
	search(type: REPOSITORY, query: $query, first: $limit, after: $cursor) {
		edges {
			node {
				__typename
				... on Repository {
					id
					stargazerCount
					description
					forkCount
					homepageUrl
					name
					nameWithOwner
					url
					updatedAt
					primaryLanguage {
						name
					}
					languages(first: 100, orderBy: {field:SIZE,direction:DESC}) {
						edges {
							node {
								name
							}
						}
					}
				}
			}
		}
	}
}
`

func GetPublicRepos(
	ctx_ context.Context,
	client_ graphql.Client,
	query string,
	limit int,
	cursor string,
) (*GetPublicReposResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetPublicRepos",
		Query:  GetPublicRepos_Operation,
		Variables: &__GetPublicReposInput{
			Query:  query,
			Limit:  limit,
			Cursor: cursor,
		},
	}
	var err_ error

	var data_ GetPublicReposResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
